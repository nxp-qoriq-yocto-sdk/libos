# LibOS Makefile
#
# Copyright (C) 2008 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

libos := $(src)libos/

ifeq ($(V),)
show = @echo $(1)
V := @
else
override V :=
endif

export REAL_CC := $(CC) -Wall

# This is a bit different than Linux -- C=1 requests
# sparse warnings, but the result is still intended to
# be a clean build.  C=2 removes -Werror, but adds
# warnings that are sometimes informative but are
# unlikely to ever result in a clean build even with
# perfectly reasonable code.

ifeq ($(C),2)
CHECKCC := cgcc -Wtypesign -Wptr-subtraction-blows -Wcast-to-as $(CRAZYWARNINGS)
endif
ifeq ($(C),1)
CHECKCC := cgcc -Wtypesign -Wcast-to-as $(EXTRAWARNINGS)
endif
ifeq ($(C),)
CHECKCC := $(REAL_CC) $(EXTRAWARNINGS)
endif

CC_OPTS_NODEP += -fno-builtin-malloc

libos-src-first-$(CONFIG_LIBOS_INIT) += head.S
libos-src-$(CONFIG_LIBOS_FSL_BOOKE_TLB) += fsl-booke-tlb.c
libos-src-early-$(CONFIG_LIBOS_EXCEPTION) += exceptions.S
libos-src-$(CONFIG_LIBOS_EXCEPTION) += trap.c
libos-src-$(CONFIG_LIBOS_LIBC) += sprintf.c string.c
libos-src-$(CONFIG_LIBOS_ALLOC_IMPL) += simple-alloc.c
libos-src-$(CONFIG_LIBOS_CONSOLE) += console.c
libos-src-$(CONFIG_LIBOS_MP) += mp.c
libos-src-$(CONFIG_LIBOS_MPIC) += mpic.c
libos-src-$(CONFIG_LIBOS_QUEUE) += queue.c
libos-src-$(CONFIG_LIBOS_NS16550) += dev/ns16550.c
libos-src-$(CONFIG_LIBOS_READLINE) += readline.c
libos-src-$(CONFIG_LIBOS_MALLOC) += malloc.c malloc-wrapper.c
libos-src-$(CONFIG_LIBOS_PAMU) += pamu.c
libos-src-y += printlog.c misc.S
libos-src-$(CONFIG_LIBOS_DRIVER_MODEL) += driver.c
libos-src-$(CONFIG_LIBOS_THREADS) += thread.S

GENASSYM=$(libos)lib/genassym.sh

.PRECIOUS: bin/%.d

hdr-libos = $(shell find $(libos)include* -name '*.h')
hdrdep-libos = $(hdr-libos:$(libos)include%.h=bin/libos/include%.d)

bin/libos/include%.d : $(libos)include%.h
	@$(MKDIR) $(@D)
	$(call show,mkdep: $(<:$(src)%=%))
	$(V)$(libos)lib/confdep $< $< > $@

-include $(hdrdep-libos)

define mkdep
	@$(MKDIR) $(@D)
	$(call show,mkdep: $(<:$(src)%=%))
	$(V)OBJ=`echo $@ | sed 's/\.d$$/\.o/'` && \
	$($(1)) -M $(2) -MF "$@" -MT "$$OBJ" $< && \
	$(libos)lib/confdep "$<" "$$OBJ" >> "$@"
endef

define build
	@$(MKDIR) $(@D)
	$(call show,build: $(<:$(src)%=%))
	$(V)$($(1)) $(2) -c -o $@ $<
endef

bin/libos/%.d : $(libos)lib/%.c
	$(call mkdep,REAL_CC,$(CC_OPTS) $(CC_OPTS_C))

bin/libos/%.o : $(libos)lib/%.c bin/libos/%.d
	$(call build,CHECKCC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C))

bin/libos/%.d : $(libos)lib/%.S bin/libos/assym.s
	$(call mkdep,REAL_CC,$(CC_OPTS) $(CC_OPTS_ASM))

bin/libos/%.o : $(libos)lib/%.S bin/libos/%.d
	$(call build,CHECKCC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_ASM))

# No $(CC_OPTS_C), as we want the symbols to go in common rather than BSS.
bin/libos/libos_assym.o: $(libos)lib/libos_assym.c bin/libos/libos_assym.d
	$(call build,CHECKCC,$(CC_OPTS_NODEP) $(CC_OPTS))

bin/libos/assym.s: bin/libos/libos_assym.o
	@$(MKDIR) $(@D)
	$(call show,genassym: $(<:$(src)%=%))
	$(V)$(GENASSYM) -o $@ $<
