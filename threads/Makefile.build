#
# Copyright 2012 Freescale Semiconductor, Inc.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
#  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN
#  NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
#  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
#  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
#  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
#  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
#  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
#  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

APP=threads

LIBFDT_DIR := $(realpath $(src)/../../../dtc)/libfdt
libos := $(realpath ..)/
LIBOS_INC := $(libos)/include
LIBOS_BIN := bin/libos
LIBOS_CLIENT_H := $(PWD)/src/libos-client.h

export CC=$(CROSS_COMPILE)gcc

export GCCINCDIR := $(shell $(CC) -print-file-name=include)
CC_OPTS=-Wa,-me500 -nostdinc -I $(GCCINCDIR) -I $(GCCINCDIR)-fixed \
	-Isrc -Ibin/include -I$(LIBOS_INC) -I$(LIBFDT_DIR) \
	-I$(libos)/include-libc -std=gnu99 -include $(LIBOS_CLIENT_H)

export CC_OPTS_NODEP := -include $(PWD)/include/config/autoconf.h

CC_OPTS_C= -Wall -Wundef -Wstrict-prototypes -Wno-trigraphs -fno-strict-aliasing \
	-fno-common -O2 -pipe -ffixed-r2 -mmultiple -mno-altivec -funit-at-a-time \
        -mno-string -fomit-frame-pointer -fno-stack-protector -Wno-unused -Werror -g3

export CC_OPTS_ASM=-D_ASM -include $(LIBOS_BIN)/assym.s

export LD=$(CROSS_COMPILE)ld
LD_OPTS=-Wl,-m -Wl,elf32ppc -Wl,-Bstatic -nostdlib
MKDIR=mkdir -p
export KCONFIG=y

include include/config/auto.conf

all: bin/$(APP).uImage bin/$(APP).map

include $(LIBFDT_DIR)/Makefile.libfdt
include $(LIBOS_DIR)/Makefile.libos

OBJS := $(basename $(libos-src-first-y:%=libos/%) \
                   $(libos-src-early-y:%=libos/%) \
                   $(hv-src-early-y) $(LIBFDT_SRCS:%=libfdt/%) \
                   $(libos-src-y:%=libos/%) init.c)

OBJS_NOCHECK := $(basename $(hv-src-nocheck-y))

OBJS := $(OBJS:%=bin/%.o)
OBJS_NOCHECK := $(OBJS_NOCHECK:%=bin/nocheck/%.o)

bin/$(APP).uImage: bin/$(APP).bin
	mkimage -A ppc -O linux -T kernel -C none -a 00000000 -e 00000000 -d $< $@

bin/$(APP).bin.gz: bin/$(APP).bin
	gzip -f $<

bin/$(APP).bin: bin/$(APP)
	$(CROSS_COMPILE)objcopy -O binary $< $@

bin/$(APP): include/config/auto.conf $(OBJS) $(OBJS_NOCHECK) $(APP).lds
	$(CC) $(LD_OPTS) -Wl,-T$(APP).lds -o $@ $(OBJS) -lgcc

# compile, and generate dependecy files
bin/%.d : $(src)src/%.c
	$(call mkdep,REAL_CC,$(CC_OPTS) $(CC_OPTS_C))

bin/nocheck/%.o : $(src)src/%.c bin/%.d
	$(call build,REAL_CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C))

bin/%.o : $(src)src/%.c bin/%.d
	$(call build,CHECKCC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C) $(WARNINGS))

bin/%.d : $(src)src/%.S bin/libos/assym.s bin/hv_assym.s
	$(call mkdep,REAL_CC,$(CC_OPTS) $(CC_OPTS_ASM_HV))

bin/%.o : $(src)src/%.S bin/%.d
	$(call build,REAL_CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_ASM_HV))

bin/libfdt/%.d : $(LIBFDT_DIR)/%.c
	$(call mkdep,REAL_CC,$(CC_OPTS) $(CC_OPTS_C))

bin/libfdt/%.o : $(LIBFDT_DIR)/%.c
	$(call build,REAL_CC,$(CC_OPTS_NODEP) $(CC_OPTS) $(CC_OPTS_C))

# include the dependecy files
-include bin/genassym.d
-include $(OBJS:%.o=%.d)

bin/$(APP).map: bin/$(APP)
	nm -n bin/$(APP) > $@
